import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as t}from"./app-D-KKd9EU.js";const l="/tir-docs/assets/image8-CgzpEWWO.png",r="/tir-docs/assets/image9-BZzcJ9iC.png",o="/tir-docs/assets/image10-BxhHWYmM.png",p="/tir-docs/assets/image11-DLrKy_27.png",c="/tir-docs/assets/image11-CQddHRDS.png",d="/tir-docs/assets/image13-yQk_7RBm.png",g="/tir-docs/assets/image13-gzqvSeGS.png",e="/tir-docs/assets/image14-C1VABWJO.png",m="/tir-docs/assets/image16-CuFrRzWr.png",u="/tir-docs/assets/image17-h9n6Muvw.png",f="/tir-docs/assets/image18-CKv3Udtg.png",v="/tir-docs/assets/image19-DVmZcFiE.png",b="/tir-docs/assets/image20-DBg182d8.png",h="/tir-docs/assets/image21-71sMsAA6.png",_="/tir-docs/assets/image22-CUGISe_9.png",y="/tir-docs/assets/image23-Dr2uijMh.png",k="/tir-docs/assets/image24-CZAekcR9.png",x="/tir-docs/assets/image25-91qWdYT3.png",C="/tir-docs/assets/image26-E6FNqGa0.png",A={};function T(w,i){return t(),n("div",null,i[0]||(i[0]=[a('<ol><li>Click <strong>Administration</strong> tab</li></ol><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>Click on the <strong>Configuration</strong> tab</li></ol><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>Click on the CA Certificate Choose File box to open a File dialog window and choose your signed x509 formatted .crt file and hit Open - the name of the file will appear in the CA Certificate Text Box</li></ol><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li>Note name of .crt file shows up in text field.</li></ol><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li>Click on the Site Certificate Choose File box to open a File dialog window and choose your pem formatted site key and hit Open - the name of the file will appear in the Site Certificate Text Box</li></ol><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li>Select Import</li></ol><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>A modal window saying &quot;Checking Certificates Please Wait... Circle&quot; will appear while the files are being loaded.</li></ul><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>A message underneath the Certificate Import form Text Fields will appear saying &quot;Certificate Import Successful!&quot; if the certs are accepted.</li></ul><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h3><ul><li><p>The nginx listener checks imported certificates for:</p><ul><li><p>A .pem formatted key file</p></li><li><p>A x509 formatted .crt file</p></li><li><p>Cert files matching modulus</p></li><li><p>CRT Common Name matching NGINX_HOST variable value</p></li></ul></li><li><p>If invalid cert files are loaded, an error will appear saying &quot;Error in Cert Response&quot; in the top right of the window</p></li></ul><figure><img src="'+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="demonstrating-certificate-import" tabindex="-1"><a class="header-anchor" href="#demonstrating-certificate-import"><span>Demonstrating Certificate Import</span></a></h2><ol><li><p>Perform TIR Deployment using docker-compose steps (above)</p></li><li><p>On the host, in the deployment folder, follow the compose logs</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>$ docker-compose logs -f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Wait for the database to be migrated/seeded completely and nginx image to have all packages installed. You will see messages similar to the following – from the tirserver, a lot of migrate messages and then it will stop – that means it’s done. If you have a good eye, look for</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>tirserver | { event: &#39;up&#39;, message: &#39;applied X</span></span>
<span class="line"><span>migrations.&#39; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>There will be a number of migrations that are applied during this setup phase.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&gt; …</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | Executing (default): INSERT INTO &quot;seeder\\_meta&quot; (&quot;name&quot;)</span></span>
<span class="line"><span>&gt; VALUES ($1) RETURNING &quot;name&quot;;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | {</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | event: &#39;migrated&#39;,</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | name: &#39;2023.12.07T05.38.17.TierRoles.ts&#39;,</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | durationSeconds: 0.011</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | }</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | { event: &#39;migrating&#39;, name:</span></span>
<span class="line"><span>&gt; &#39;2023.12.07T14.27.10.BoundaryRoles.ts&#39; }</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; …</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | { event: &#39;migrating&#39;, name:</span></span>
<span class="line"><span>&gt; &#39;2024.02.03T01.28.29.Classifications.ts&#39; }</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | Executing (default): INSERT INTO &quot;Classifications&quot;</span></span>
<span class="line"><span>&gt; (&quot;id&quot;,&quot;name&quot;,&quot;abbreviation&quot;,&quot;creationDate&quot;,&quot;lastUpdate&quot;) VALUES</span></span>
<span class="line"><span>&gt; (1,&#39;Unclassified&#39;,&#39;U&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;),(2,&#39;Controlled</span></span>
<span class="line"><span>&gt; Unclassified</span></span>
<span class="line"><span>&gt; Information&#39;,&#39;CUI&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;),(3,&#39;Secret&#39;,&#39;S&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;),(4,&#39;Top</span></span>
<span class="line"><span>&gt; Secret&#39;,&#39;TS&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;,&#39;2024-03-13T12:39:50.487+00:00&#39;);</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | Executing (default): SELECT table\\_name FROM</span></span>
<span class="line"><span>&gt; information\\_schema.tables WHERE table\\_schema = &#39;public&#39; AND</span></span>
<span class="line"><span>&gt; table\\_name = &#39;seeder\\_meta&#39;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | Executing (default): SELECT i.relname AS name,</span></span>
<span class="line"><span>&gt; ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS</span></span>
<span class="line"><span>&gt; indkey, array\\_agg(a.attnum) as column\\_indexes, array\\_agg(a.attname)</span></span>
<span class="line"><span>&gt; AS column\\_names, pg\\_get\\_indexdef(ix.indexrelid) AS definition FROM</span></span>
<span class="line"><span>&gt; pg\\_class t, pg\\_class i, pg\\_index ix, pg\\_attribute a WHERE t.oid =</span></span>
<span class="line"><span>&gt; ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND</span></span>
<span class="line"><span>&gt; t.relkind = &#39;r&#39; and t.relname = &#39;seeder\\_meta&#39; GROUP BY i.relname,</span></span>
<span class="line"><span>&gt; ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY</span></span>
<span class="line"><span>&gt; i.relname;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | Executing (default): INSERT INTO &quot;seeder\\_meta&quot; (&quot;name&quot;)</span></span>
<span class="line"><span>&gt; VALUES ($1) RETURNING &quot;name&quot;;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | {</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | event: &#39;migrated&#39;,</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | name: &#39;2024.02.03T01.28.29.Classifications.ts&#39;,</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | durationSeconds: 0.015</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | }</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>&gt; tirserver | { event: &#39;up&#39;, message: &#39;applied 7</span></span>
<span class="line"><span>&gt; migrations.&#39; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Load site in browser using the hostname in .env for NGINX_HOST. It will be insecure due to its originally Self-signed certs.</li></ol><ul><li><p>In Chrome, type <strong>“thisisunsafe”</strong></p></li><li><p>in the browser to continue.</p></li></ul><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><p>Follow the steps in “Steps for TIR Cert Import and Verification” steps 1-3.</p></li><li><p>Load invalid certs and note messages in docker-compose logs</p><p>a. Load non-formatted invalid certs<br> b. Load non-matching certs<br> c. Load matching but wrong site certs</p></li><li><p>Load correct certs, see responses and messages in logs</p></li></ol><p>Ctrl+C out of docker-compose logs, wait about 15 seconds and run the following command to see status of tirserver and nginxproxy (and postgresdatabase if applicable). Note uptime for proxy is less than other two due to its recent restart.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>$ podman ps</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="7"><li>Close tab and reopen in browser, note cert error is gone – copy<br><a href="http://hostname" target="_blank" rel="noopener noreferrer">http://hostname</a> from address bar</li></ol><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="8"><li>Paste address into a new tab, and go.</li></ol><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="9"><li>Note site information next to address shows secure connection and<br> Certificate is Valid. Click icon next to web address.</li></ol><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="10"><li>Click on Connection is secure to view site details</li></ol><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="11"><li>Click on Certificate is valid to view Certificate information.</li></ol><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',47)]))}const I=s(A,[["render",T]]),E=JSON.parse('{"path":"/courses/tir_deployment_guide/03_CertificateImportAndVerification.html","title":"Certificate Import and Verification","lang":"en-US","frontmatter":{"order":3,"next":"03_CertificateImportAndVerification.md","title":"Certificate Import and Verification","shortTitle":"2. Certificate Import and Verification","author":"Jason Kerbelis","headerDepth":4,"toc":{"levels":[2,6]},"description":"Click Administration tab Click on the Configuration tab Click on the CA Certificate Choose File box to open a File dialog window and choose your signed x509 formatted .crt file ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Certificate Import and Verification\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-12T23:38:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jason Kerbelis\\"}]}"],["meta",{"property":"og:url","content":"https://mitre.github.io/tir-docs/tir-docs/courses/tir_deployment_guide/03_CertificateImportAndVerification.html"}],["meta",{"property":"og:site_name","content":"Test Ingest Repository Docs"}],["meta",{"property":"og:title","content":"Certificate Import and Verification"}],["meta",{"property":"og:description","content":"Click Administration tab Click on the Configuration tab Click on the CA Certificate Choose File box to open a File dialog window and choose your signed x509 formatted .crt file ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-12T23:38:54.000Z"}],["meta",{"property":"article:author","content":"Jason Kerbelis"}],["meta",{"property":"article:modified_time","content":"2025-02-12T23:38:54.000Z"}]]},"git":{"createdTime":1736974668000,"updatedTime":1739403534000,"contributors":[{"name":"jaykerbelis","username":"jaykerbelis","email":"129434268+jaykerbelis@users.noreply.github.com","commits":3,"url":"https://github.com/jaykerbelis"},{"name":"Aaron Lippold","username":"","email":"lippold@gmail.com","commits":1}]},"readingTime":{"minutes":2.61,"words":783},"filePathRelative":"courses/tir_deployment_guide/03_CertificateImportAndVerification.md","autoDesc":true}');export{I as comp,E as data};
